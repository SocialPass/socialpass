# Use a Python 3.11 base image from the bullseye tag.
FROM python:3.11

# Set environment variables.
ARG DJANGO_AWS_S3_REGION_NAME
ARG CORS_URLS_REGEX
ARG DJANGO_DEBUG
ARG STAFF_URL
ARG GOOGLE_WALLET_ISSUER_ID
ARG GOOGLE_WALLET_PRIVATE_KEY
ARG MAILGUN_API_KEY
ARG APPLE_WALLET_PASSWORD
ARG DJANGO_AWS_STORAGE_BUCKET_NAME
ARG COMMIT_HASH
ARG DJANGO_ALLOWED_HOSTS
ARG DJANGO_ADMIN_URL
ARG DJANGO_READ_DOT_ENV_FILE
ARG DJANGO_AWS_S3_ENDPOINT_URL
ARG WEB_CONCURRENCY
ARG DJANGO_SERVER_EMAIL
ARG GMAPS_API_KEY
ARG DJANGO_DEFAULT_FROM_EMAIL
ARG DJANGO_AWS_ACCESS_KEY_ID
ARG DJANGO_SECRET_KEY
ARG ROLLBAR_ENV_NAME
ARG DJANGO_AWS_SECRET_ACCESS_KEY
ARG DJANGO_EMAIL_SUBJECT_PREFIX
ARG MAILGUN_DOMAIN
ARG GOOGLE_WALLET_PRIVATE_KEY_ID
ARG GOOGLE_WALLET_CLIENT_ID
ARG STRIPE_API_KEY
ARG APPLE_WALLET_WWDR_CERTIFICATE
ARG SILKY_URL
ARG APPLE_WALLET_CERTIFICATE
ARG CELERY_BROKER_URL
ARG APPLE_WALLET_PASS_TYPE_ID
ARG CORS_ALLOW_ALL_ORIGINS
ARG MORALIS_API_KEY
ARG APPLE_WALLET_TEAM_ID
ARG APPLE_WALLET_KEY
ARG DJANGO_DATABASE_URL
ARG PYTHONHASHSEED
ARG DJANGO_SETTINGS_MODULE
ENV PYTHONUNBUFFERED 1
ENV DJANGO_AWS_S3_REGION_NAME=$DJANGO_AWS_S3_REGION_NAME
ENV CORS_URLS_REGEX=$CORS_URLS_REGEX
ENV DJANGO_DEBUG=$DJANGO_DEBUG
ENV STAFF_URL=$STAFF_URL
ENV GOOGLE_WALLET_ISSUER_ID=$GOOGLE_WALLET_ISSUER_ID
ENV GOOGLE_WALLET_PRIVATE_KEY=$GOOGLE_WALLET_PRIVATE_KEY
ENV MAILGUN_API_KEY=$MAILGUN_API_KEY
ENV APPLE_WALLET_PASSWORD=$APPLE_WALLET_PASSWORD
ENV DJANGO_AWS_STORAGE_BUCKET_NAME=$DJANGO_AWS_STORAGE_BUCKET_NAME
ENV COMMIT_HASH=$COMMIT_HASH
ENV DJANGO_ALLOWED_HOSTS=$DJANGO_ALLOWED_HOSTS
ENV DJANGO_ADMIN_URL=$DJANGO_ADMIN_URL
ENV DJANGO_READ_DOT_ENV_FILE=$DJANGO_READ_DOT_ENV_FILE
ENV DJANGO_AWS_S3_ENDPOINT_URL=$DJANGO_AWS_S3_ENDPOINT_URL
ENV WEB_CONCURRENCY=$WEB_CONCURRENCY
ENV DJANGO_SERVER_EMAIL=$DJANGO_SERVER_EMAIL
ENV GMAPS_API_KEY=$GMAPS_API_KEY
ENV DJANGO_DEFAULT_FROM_EMAIL=$DJANGO_DEFAULT_FROM_EMAIL
ENV DJANGO_AWS_ACCESS_KEY_ID=$DJANGO_AWS_ACCESS_KEY_ID
ENV DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY
ENV ROLLBAR_ENV_NAME=$ROLLBAR_ENV_NAME
ENV DJANGO_AWS_SECRET_ACCESS_KEY=$DJANGO_AWS_SECRET_ACCESS_KEY
ENV DJANGO_EMAIL_SUBJECT_PREFIX=$DJANGO_EMAIL_SUBJECT_PREFIX
ENV MAILGUN_DOMAIN=$MAILGUN_DOMAIN
ENV GOOGLE_WALLET_PRIVATE_KEY_ID=$GOOGLE_WALLET_PRIVATE_KEY_ID
ENV GOOGLE_WALLET_CLIENT_ID=$GOOGLE_WALLET_CLIENT_ID
ENV STRIPE_API_KEY=$STRIPE_API_KEY
ENV APPLE_WALLET_WWDR_CERTIFICATE=$APPLE_WALLET_WWDR_CERTIFICATE
ENV SILKY_URL=$SILKY_URL
ENV APPLE_WALLET_CERTIFICATE=$APPLE_WALLET_CERTIFICATE
ENV CELERY_BROKER_URL=$CELERY_BROKER_URL
ENV APPLE_WALLET_PASS_TYPE_ID=$APPLE_WALLET_PASS_TYPE_ID
ENV CORS_ALLOW_ALL_ORIGINS=$CORS_ALLOW_ALL_ORIGINS
ENV MORALIS_API_KEY=$MORALIS_API_KEY
ENV APPLE_WALLET_TEAM_ID=$APPLE_WALLET_TEAM_ID
ENV APPLE_WALLET_KEY=$APPLE_WALLET_KEY
ENV DJANGO_DATABASE_URL=$DJANGO_DATABASE_URL
ENV PYTHONHASHSEED=$PYTHONHASHSEED
ENV DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE

# Set the working directory to /app/.
WORKDIR /app/

# Create and activate a virtual environment.
RUN python -m venv venv
RUN . venv/bin/activate

# Copy the Python requirements files to the container.
COPY /backend/config/requirements/production.txt /app/production.txt
COPY /backend/config/requirements/base.txt /app/base.txt

# Copy your entire codebase, including the Django project, to the container.
COPY /backend /app/

# Update pip and install Python dependencies within the virtual environment.
RUN pip install --upgrade pip
RUN pip install -r production.txt

# Change directory for a specific RUN command.
WORKDIR /app/

# Run Django migrations && collectstatic within the virtual environment.
RUN python manage.py migrate
RUN python manage.py collectstatic --no-input

# Specify how to run your Django application using Gunicorn within the virtual environment.
CMD ["gunicorn", "config.wsgi:application", "--worker-tmp-dir", "/dev/shm"]
