# Generated by Django 4.0.4 on 2022-06-17 23:29
import logging
from django.db import migrations


def create_default_pricing_group(apps, schema_editor):

    PricingRuleGroup = apps.get_model("dashboard", "PricingRuleGroup")

    pricing_rule_group, created = PricingRuleGroup.objects.get_or_create(name="Default")
    if created:
        pricing_rule_group.description = "Default pricing rule group"
        pricing_rule_group.save()

    if PricingRuleGroup.objects.count() > 1:
        logging.warning(
            "PricingRuleGroup already exists in database. Default still created. Maybe as a result there are two default pricing rule groups. Please check the database"
        )  # noqa


def reverse_default_pricing_group(apps, schema_editor):
    PricingRuleGroup = apps.get_model("dashboard", "PricingRuleGroup")
    try:
        pricing_rule_group = PricingRuleGroup.objects.get(name="Default")
        pricing_rule_group.delete()
    except Exception:
        pass


class Migration(migrations.Migration):

    dependencies = [
        (
            "dashboard",
            "0002_pricingrulegroup_team_pricingrule_eventstripepayment_and_more",
        ),
    ]

    operations = [
        migrations.RunPython(
            create_default_pricing_group, reverse_code=reverse_default_pricing_group
        )
    ]
