# Generated by Django 4.0.5 on 2022-07-08 22:20

import django.core.validators
from django.db import migrations, models

import apps.root.validators


class Migration(migrations.Migration):

    dependencies = [
        ("root", "0021_alter_event_timezone"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="event",
            name="is_draft",
        ),
        migrations.AlterField(
            model_name="event",
            name="capacity",
            field=models.IntegerField(
                blank=True,
                default=1,
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="limit_per_person",
            field=models.IntegerField(
                default=1,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="requirements",
            field=models.JSONField(
                blank=True,
                default=list,
                validators=[
                    apps.root.validators.JSONSchemaValidator(
                        limit_value={
                            "format": "tabs",
                            "items": {
                                "properties": {
                                    "amount": {
                                        "format": "number",
                                        "minimum": 1,
                                        "title": "Required Amount",
                                        "type": "integer",
                                    },
                                    "asset_address": {
                                        "pattern": "^(0x|0X).*$",
                                        "title": "Asset Address",
                                        "type": "string",
                                    },
                                    "asset_type": {
                                        "enum": ["ERC20", "ERC721", "ERC1155"],
                                        "title": "Asset Type",
                                        "type": "string",
                                    },
                                    "blockchain": {
                                        "enum": ["EVM"],
                                        "title": "Blockchain",
                                        "type": "string",
                                    },
                                    "chain_id": {
                                        "enum": [1, 2, 4, 56, 43114, 137],
                                        "title": "Network",
                                        "type": "integer",
                                    },
                                    "to_block": {
                                        "format": "number",
                                        "minimum": 1,
                                        "title": "Snapshot block (for fungible tokens)",
                                        "type": "integer",
                                    },
                                    "token_id": {
                                        "items": {
                                            "title": "Token ID",
                                            "type": "integer",
                                        },
                                        "minItems": 0,
                                        "title": "Token IDs",
                                        "type": "array",
                                    },
                                },
                                "required": [
                                    "blockchain",
                                    "asset_address",
                                    "amount",
                                    "chain_id",
                                    "asset_type",
                                ],
                                "title": "Requirement",
                                "type": "object",
                            },
                            "properties": {},
                            "title": "Blockchain Requirements",
                            "type": "array",
                        }
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="visibility",
            field=models.CharField(
                choices=[("PUBLIC", "Public"), ("PRIVATE", "Private")], max_length=50
            ),
        ),
    ]
