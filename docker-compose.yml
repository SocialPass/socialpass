version: '3.8'
services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - /var/www/socialpass:/app
      - /var/www/socialpass/data/static:/app/staticfiles
      - /var/www/socialpass/data/media:/app/media
    env_file:
      - .env
    depends_on:
      - db
    labels:
      traefik.enable: true
      traefik.http.routers.web.rule: Host(`${DOMAIN_NAME}`)
      traefik.http.routers.web.entrypoints: websecure
      traefik.http.routers.web.tls: true
      traefik.http.services.web.loadbalancer.server.port: 8000
      traefik.http.routers.web.tls.certresolver: letsencrypt

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    volumes:
      - /var/www/socialpass/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    command: postgres -c listen_addresses='*'

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${DOMAIN_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/www/socialpass/data/letsencrypt:/letsencrypt
