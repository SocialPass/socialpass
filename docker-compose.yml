version: "3.9"

networks:
  backend:
    name: backend

x-common-variables: &postgres-common-variables
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

services:
  db:
    image: postgres
    environment: *postgres-common-variables
    networks:
      - backend
    volumes:
      - ./backend/.docker-volumes/data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: socialpass-django-backend
    networks:
      - backend
    command: python backend/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    expose:
      - 8000 # django server
      - 8888 # django shell_plus
    environment:
      <<: *postgres-common-variables
      DJANGO_DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
    links:
      - db
    depends_on:
      db:
        condition: service_healthy


  eventportal:
    image: socialpass-eventportal-app
    command: sh -c "yarn start --host"
    stdin_open: true
    volumes:
      - ./frontend/eventportal/src/:/eventportal/src/
      - ./frontend/eventportal/package.json:/eventportal/package.json
      - ./frontend/eventportal/package-lock.json:/eventportal/package-lock.json
    build:
      context: ./frontend/eventportal
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_healthy

  scanner-app:
    image: socialpass-scanner-app
    command: sh -c "yarn start --host"
    stdin_open: true
    volumes:
      - ./frontend/scanner-app/src/:/scanner/src/
      - ./frontend/scanner-app/package.json:/scanner/package.json
      - ./frontend/scanner-app/package-lock.json:/scanner/package-lock.json
    build:
      context: ./frontend/scanner-app
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_healthy
